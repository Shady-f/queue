#include <stdio.h>
#include <string.h>

#define SIZE 5
char queue[SIZE][100];
int front = -1, rear = -1;

int isFull() {
    return (front == (rear + 1) % SIZE);
}

int isEmpty() {
    return (front == -1);
}

void enqueue(char str[]) {
    if (isFull()) {
        printf("Queue Overflow!\n");
    } else {
        if (isEmpty()) front = 0;
        rear = (rear + 1) % SIZE;
        strcpy(queue[rear], str);
    }
}

void dequeue() {
    if (isEmpty()) {
        printf("Queue Empty!\n");
    } else {
        printf("Dequeued: %s\n", queue[front]);
        if (front == rear) {
            front = rear = -1; // reset
        } else {
            front = (front + 1) % SIZE;
        }
    }
}

void display() {
    if (isEmpty()) {
        printf("Queue Empty!\n");
    } else {
        printf("Queue: ");
        int i = front;
        while (1) {
            printf("%s ", queue[i]);
            if (i == rear) break;
            i = (i + 1) % SIZE;
        }
        printf("\n");
    }
}

int main() {
    int choice;
    char str[100];

    do {
        printf("\n1. Enqueue\n2. Dequeue\n3. Display\n0. Exit\nEnter choice: ");
        scanf("%d", &choice);
        getchar(); // to consume newline

        switch (choice) {
            case 1:
                printf("Enter string: ");
                fgets(str, sizeof(str), stdin);
                str[strcspn(str, "\n")] = 0; // remove newline
                enqueue(str);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 0:
                printf("Exit!\n");
                break;
            default:
                printf("Invalid choice\n");
        }
    } while (choice != 0);

    return 0;
}